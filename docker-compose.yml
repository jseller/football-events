version: "3.4"

services:
  web:
    image: football-events:dev
    build:
      context: "."
    env_file:
      - .prod.env
    command: >
      gunicorn -b 0.0.0.0:5000
      --access-logfile -
      --reload
      wsgi:app
    ports:
      - "${DOCKER_WEB_PORT:-127.0.0.1:5000}:5000"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    expose:
      - "5000"
    volumes:
      - ./:/app
    depends_on:
      - postgres

  nginx:
    build: ./nginx
    restart: always
    volumes:
      - /www/static
    ports:
      - "80:80"
    depends_on:
      - web

  worker:
    build:
      context: "."
    command: pipenv run celery multi start worker1 -A celery_worker.celery --loglevel=info --logfile=logs/worker.log
    depends_on:
      - "redis"
    env_file:
      - ".prod.env"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    volumes:
      - "${DOCKER_WEB_VOLUME:-./public:/app/public}"

  postgres:
    image: "postgres"
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - "5432"
    env_file:
      - ".prod.env"

  redis:
    env_file:
      - ".prod.env"
    image: "redis:5.0.7-buster"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "${DOCKER_STOP_GRACE_PERIOD:-3s}"
    volumes:
      - "redis:/data"

volumes:
  redis: {}
